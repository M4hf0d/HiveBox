name: CI Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Lint Python code with flake8
      - name: Lint Python code
        run: |
          flake8 . --max-line-length=100 --exclude=.venv,tests

      # Install hadolint for Dockerfile linting
      - name: Install hadolint
        run: |
          curl -L https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64 -o /usr/local/bin/hadolint
          chmod +x /usr/local/bin/hadolint

      # Lint Dockerfile
      - name: Lint Dockerfile
        run: |
          hadolint Dockerfile

      # Run unit tests
      - name: Run unit tests
        run: |
          export PYTHONPATH=$PWD
          pytest tests/test_app.py -v

      # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t hivebox:0.0.1 .

      # Run Docker container and test /version endpoint
      - name: Test /version endpoint
        run: |
          docker run -d -p 5000:5000 --name hivebox hivebox:0.0.1
          sleep 5
          curl -f http://localhost:5000/version | grep '<p>v0.0.1</p>' || (echo "Version test failed" && exit 1)

      # Stop container
      - name: Stop container
        if: always()
        run: |
          docker stop hivebox

  scorecard:
    runs-on: ubuntu-latest
    permissions:
      # Needed for uploading results
      security-events: write
      # Needed for private repository analysis
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Run OSSF Scorecard
        uses: ossf/scorecard-action@v2.4.1
        with:
          results_file: results.sarif
          results_format: sarif
          publish_results: true
